// Code generated by mockery v2.49.1. DO NOT EDIT.

package spheron

import (
	spheron "github.com/gitopia/git-server/pkg/spheron"
	mock "github.com/stretchr/testify/mock"
)

// MockSpheronClientInterface is an autogenerated mock type for the SpheronClientInterface type
type MockSpheronClientInterface struct {
	mock.Mock
}

type MockSpheronClientInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSpheronClientInterface) EXPECT() *MockSpheronClientInterface_Expecter {
	return &MockSpheronClientInterface_Expecter{mock: &_m.Mock}
}

// UploadFileInChunks provides a mock function with given fields: filePath
func (_m *MockSpheronClientInterface) UploadFileInChunks(filePath string) (spheron.FinalizeResponse, error) {
	ret := _m.Called(filePath)

	if len(ret) == 0 {
		panic("no return value specified for UploadFileInChunks")
	}

	var r0 spheron.FinalizeResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (spheron.FinalizeResponse, error)); ok {
		return rf(filePath)
	}
	if rf, ok := ret.Get(0).(func(string) spheron.FinalizeResponse); ok {
		r0 = rf(filePath)
	} else {
		r0 = ret.Get(0).(spheron.FinalizeResponse)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(filePath)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockSpheronClientInterface_UploadFileInChunks_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UploadFileInChunks'
type MockSpheronClientInterface_UploadFileInChunks_Call struct {
	*mock.Call
}

// UploadFileInChunks is a helper method to define mock.On call
//   - filePath string
func (_e *MockSpheronClientInterface_Expecter) UploadFileInChunks(filePath interface{}) *MockSpheronClientInterface_UploadFileInChunks_Call {
	return &MockSpheronClientInterface_UploadFileInChunks_Call{Call: _e.mock.On("UploadFileInChunks", filePath)}
}

func (_c *MockSpheronClientInterface_UploadFileInChunks_Call) Run(run func(filePath string)) *MockSpheronClientInterface_UploadFileInChunks_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockSpheronClientInterface_UploadFileInChunks_Call) Return(_a0 spheron.FinalizeResponse, _a1 error) *MockSpheronClientInterface_UploadFileInChunks_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockSpheronClientInterface_UploadFileInChunks_Call) RunAndReturn(run func(string) (spheron.FinalizeResponse, error)) *MockSpheronClientInterface_UploadFileInChunks_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSpheronClientInterface creates a new instance of MockSpheronClientInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSpheronClientInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSpheronClientInterface {
	mock := &MockSpheronClientInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
